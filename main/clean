#!/bin/bash
BASEDIR="$(dirname "$BASH_SOURCE")"
cd "$BASEDIR"
logdir="$HOME/.neurobin/JLIVECD"
mkdir -p "$logdir"
configfile="$logdir/.config"
kerver=$(uname -r)
livedir="$(cat /usr/local/JLIVECD/main/dirn)"
liveconfigfile="$livedir/.config"
timeout="$(grep -soP '(?<=^timeout=).*' "$configfile")"
if [[ $timeout =~ ^[0-9]+$ ]]; then
  timeout=$(echo $timeout |sed "s/^0*\([1-9]\)/\1/;s/^0*$/0/")
else
  timeout=10
fi
homec="$(grep -soP '(?<=^RetainHome=).*' "$liveconfigfile")"
[[ $homec =~ ^[Yy]$ ]] || homec="n" 
cd "$livedir"
initrd="$(cat edit/initrd)"
rm -f edit/run/synaptic.socket
chroot edit aptitude clean
chroot edit rm -r /mydir
chroot edit rm -rf /tmp/* ~/.bash_history
chroot edit rm /var/lib/dbus/machine-id
chroot edit rm /sbin/initctl
chroot edit dpkg-divert --rename --remove /sbin/initctl
chroot edit umount /proc || chroot edit umount -lf /proc 
chroot edit umount /sys
chroot edit umount /dev/pts
umount edit/dev || umount -lf edit/dev
rm -f /tmp/JLlock
echo -e "\n...............Time is value.............\n......you have $timeout seconds each to answere the following questions.....\n......if not answered, I will take 'n' as default (be ready)...\n......Some default may be different due to previous choice.\n"
read -t $timeout -p "Want to retain edit/home directory? (y/n)? (default '$homec'): " home
[[ $home == "" ]] && home=$homec
if [[  $home =~ ^[Yy]$ ]]; then
  echo "........edit/home kept as it is......."
else
  rm -rf edit/home/*
  echo "........edit/home cleaned!......"
fi
if grep -sq '^RetainHome=' $liveconfigfile;then
   sed -r -i.bak "s/(^RetainHome=).*/\1$home/" $liveconfigfile
else
    echo "RetainHome=$home" >> $liveconfigfile
fi
echo "\n......initrd archive type: $initrd detected!"
echo -e "\n\n.....................Rebuilding initrd!....................\n.......this step is needed if you have modified the kernel module, or init scripts......\n......If you have installed new kernel and want to boot that kernel then skip this for now.....\n"

read -t $timeout -p "......have you modified init script or kernel module? (y/n)?: " choice
c=1
if [ "$choice" != "y" ]; then
  if [ "$choice" != "Y" ]; then
    c=2
  fi
fi
while [ $c == 1 ]
do
  if [ -d "edit/lib/modules/$kerver" ]; then
    echo "......Rebuilding initrd...running....."
    mount --bind /dev/ edit/dev
    chroot edit mount -t proc none /proc
    chroot edit mount -t sysfs none /sys
    chroot edit mount -t devpts none /dev/pts
    chroot edit mkinitramfs -o /"$initrd" "$kerver"
    echo "......initrd rebuilt successfully!......"
    chroot edit umount /proc || chroot edit umount -lf /proc 
    chroot edit umount /sys
    chroot edit umount /dev/pts
    umount edit/dev || umount -lf edit/dev
    c=2
  else
    read -e -p ".......Enter live system kernel version (n to skip/default, take your time on this one): " kerver
  fi
  if [ "$kerver" == "n" ]; then
    c=2
  elif [ "$kerver" == "N" ]; then
    c=2
  fi
done
